{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\aPP\\\\reactApp\\\\la-maison-jungle\\\\src\\\\components\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport '../styles/Cart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cart(_ref) {\n  _s();\n\n  let {\n    cart,\n    updateCart\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const total = cart.reduce((acc, plantType) => acc + plantType.amount * plantType.price, 0);\n  return isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lmj-cart\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"lmj-cart-toggle-button\",\n      onClick: () => setIsOpen(false),\n      children: \"Fermer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), cart.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Panier\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cart.map((_ref2, index) => {\n          let {\n            name,\n            price,\n            amount\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [name, \" \", price, \"\\u20AC x \", amount]\n          }, `${name}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total :\", total, \"\\u20AC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          color: 'red'\n        },\n        onClick: () => updateCart([]),\n        children: \"Vider le panier\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          color: 'blue'\n        },\n        children: \"Valider la commande\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Votre panier est vide\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lmj-cart-closed\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"lmj-cart-toggle-button\",\n      onClick: () => setIsOpen(true),\n      children: \"Ouvrir le Panier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Cart, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/USER/aPP/reactApp/la-maison-jungle/src/components/Cart.js"],"names":["useState","Cart","cart","updateCart","isOpen","setIsOpen","total","reduce","acc","plantType","amount","price","length","map","index","name","color"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,oBAAP;;;AAGA,SAASC,IAAT,OAAoC;AAAA;;AAAA,MAAtB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;AAChC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMM,KAAK,GAAGJ,IAAI,CAACK,MAAL,CAChB,CAACC,GAAD,EAAMC,SAAN,KAAoBD,GAAG,GAAGC,SAAS,CAACC,MAAV,GAAmBD,SAAS,CAACE,KADvC,EAEhB,CAFgB,CAAd;AAKA,SAAOP,MAAM,gBACT;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AACI,MAAA,SAAS,EAAC,wBADd;AAEI,MAAA,OAAO,EAAE,MAAMC,SAAS,CAAC,KAAD,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKH,IAAI,CAACU,MAAL,GAAc,CAAd,gBACT;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA,kBACEV,IAAI,CAACW,GAAL,CAAS,QAA0BC,KAA1B;AAAA,cAAC;AAAEC,YAAAA,IAAF;AAAQJ,YAAAA,KAAR;AAAeD,YAAAA;AAAf,WAAD;AAAA,8BACT;AAAA,uBACEK,IADF,OACSJ,KADT,eACoBD,MADpB;AAAA,aAAW,GAAEK,IAAK,IAAGD,KAAM,EAA3B;AAAA;AAAA;AAAA;AAAA,kBADS;AAAA,SAAT;AADF;AAAA;AAAA;AAAA;AAAA,cAFD,eASC;AAAA,8BAAYR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cATD,eAUgB;AAAQ,QAAA,KAAK,EAAE;AAACU,UAAAA,KAAK,EAAE;AAAR,SAAf;AAA+B,QAAA,OAAO,EAAE,MAAMb,UAAU,CAAC,EAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVhB,eAWgB;AAAQ,QAAA,KAAK,EAAE;AAACa,UAAAA,KAAK,EAAE;AAAR,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,gBAgBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBI;AAAA;AAAA;AAAA;AAAA;AAAA,UADS,gBA0BL;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACI;AACI,MAAA,SAAS,EAAC,wBADd;AAEI,MAAA,OAAO,EAAE,MAAMX,SAAS,CAAC,IAAD,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UA1BR;AAkCC;;GAzCIJ,I;;KAAAA,I;AA0CL,eAAeA,IAAf","sourcesContent":["import { useState } from 'react'\r\nimport '../styles/Cart.css'\r\n\r\n\r\nfunction Cart({ cart, updateCart }) {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const total = cart.reduce(\r\n\t\t(acc, plantType) => acc + plantType.amount * plantType.price,\r\n\t\t0\r\n\t)\r\n\r\n    return isOpen ?(\r\n        <div className='lmj-cart'>\r\n            <button\r\n                className='lmj-cart-toggle-button' \r\n                onClick={() => setIsOpen(false)}\r\n            >Fermer</button>\r\n            {cart.length > 0 ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>Panier</h2>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{cart.map(({ name, price, amount }, index) => (\r\n\t\t\t\t\t\t\t<div key={`${name}-${index}`}>\r\n\t\t\t\t\t\t\t\t{name} {price}€ x {amount}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<h3>Total :{total}€</h3>\r\n                    <button style={{color: 'red'}} onClick={() => updateCart([])}>Vider le panier</button>\r\n                    <button style={{color: 'blue'}}>Valider la commande</button>\r\n\r\n                </div>\r\n            ) : (\r\n\t\t\t\t<div>Votre panier est vide</div>\r\n\t\t\t)}\r\n        </div>\r\n        ) : (\r\n            <div className='lmj-cart-closed'>\r\n                <button\r\n                    className='lmj-cart-toggle-button'\r\n                    onClick={() => setIsOpen(true)}\r\n                >\r\n                Ouvrir le Panier</button>\r\n            </div>\r\n        )\r\n    }\r\n    export default Cart"]},"metadata":{},"sourceType":"module"}